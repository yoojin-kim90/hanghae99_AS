{"ast":null,"code":"var _jsxFileName = \"/Users/gim-yujin/Desktop/sparta/sparta_react/react-as/src/WordList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WordList = props => {\n  _s();\n\n  //   리덕스에 있는 데이터를 가져와요!\n  const word_list = useSelector(state => state.word.word_list);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      style: {\n        color: white\n      },\n      children: \"My dictionary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), word_list.map(w => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: \"#888888\",\n          size: \"8px\",\n          underline: true,\n          children: \"\\uB2E8\\uC5B4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: w.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"#888888\",\n          size: \"8px\",\n          underline: true,\n          children: \"\\uC124\\uBA85\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: w.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"#888888\",\n          size: \"8px\",\n          underline: true,\n          children: \"\\uC608\\uC2DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"blue\",\n          children: w.example\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, w.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(AddButton, {\n      onClick: () => {\n        props.history.push(\"/write\");\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}; // 제목 스타일을 잡아줄 거예요.\n\n\n_s(WordList, \"a6SOZUEq8gJZjW11qJKM40aQoRs=\", false, function () {\n  return [useSelector];\n});\n\n_c = WordList;\nconst Title = styled.h1`\n  width: 90vw;\n  margin: 8px auto;\n`; // 목록에 나올 단어들을 각각 카드 뷰로 만들거예요.\n// Card는 카드 하나(와이어프레임의 단어, 설명, 예시를 담고 있는 흰색 네모칸 하나! 그게 카드입니다.)의 스타일을 담당해요!\n\n_c2 = Title;\nconst Card = styled.div`\n  width: 300px;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 4px 16px;\n  margin: 8px auto;\n  box-sizing: border-box;\n  background-color: #ffffff;\n  border-radius: 15px;\n`; // 텍스트 스타일을 잡아줄거예요.\n// size라는 props가 있으면 size대로 폰트 크기를 넣어주고,\n// underline이라는 props가 있으면 밑줄을 줄거예요.(text-decoration 속성을 사용합니다.)\n// color라는 props가 있으면 color대로 텍스트 컬러를 바꿔줄거예요.\n\n_c3 = Card;\nconst Text = styled.p`\n  font-size: ${props => props.size ? `${props.size}` : \"16px\"};\n  ${props => props.underline ? \"text-decoration: underline;\" : \"\"}\n  ${props => props.color ? `color: ${props.color};` : \"\"}\n  margin: 4px 0px;\n`; // 추가하기 버튼 스타일을 잡아줄거예요.\n\n_c4 = Text;\nconst AddButton = styled.button`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 50px;\n  height: 50px;\n  border-radius: 50px;\n  background-color: #6100ff;\n  color: #ffffff;\n  font-size: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c5 = AddButton;\nexport default WordList;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"WordList\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Card\");\n$RefreshReg$(_c4, \"Text\");\n$RefreshReg$(_c5, \"AddButton\");","map":{"version":3,"sources":["/Users/gim-yujin/Desktop/sparta/sparta_react/react-as/src/WordList.js"],"names":["React","styled","useSelector","WordList","props","word_list","state","word","color","white","map","w","desc","example","id","history","push","Title","h1","Card","div","Text","p","size","underline","AddButton","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B;AACA,QAAMC,SAAS,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,SAAvB,CAA7B;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAACG,QAAAA,KAAK,EAAEC;AAAR,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,SAAS,CAACK,GAAV,CAAeC,CAAD,IAAO;AACpB,0BACE,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,IAAI,EAAC,KAA3B;AAAiC,UAAA,SAAS,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAA,oBAAOA,CAAC,CAACJ;AAAT;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,IAAI,EAAC,KAA3B;AAAiC,UAAA,SAAS,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE,QAAC,IAAD;AAAA,oBAAOI,CAAC,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,IAAI,EAAC,KAA3B;AAAiC,UAAA,SAAS,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,MAAZ;AAAA,oBAAoBD,CAAC,CAACE;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA,SAAWF,CAAC,CAACG,EAAb;AAAA;AAAA;AAAA;AAAA,cADF;AAgBD,KAjBA,CAFH,eAqBE,QAAC,SAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbV,QAAAA,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAnCD,C,CAqCA;;;GArCMb,Q;UAEcD,W;;;KAFdC,Q;AAsCN,MAAMc,KAAK,GAAGhB,MAAM,CAACiB,EAAG;AACxB;AACA;AACA,CAHA,C,CAKA;AACA;;MANMD,K;AAON,MAAME,IAAI,GAAGlB,MAAM,CAACmB,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA,C,CAYA;AACA;AACA;AACA;;MAfMD,I;AAgBN,MAAME,IAAI,GAAGpB,MAAM,CAACqB,CAAE;AACtB,eAAgBlB,KAAD,IAAYA,KAAK,CAACmB,IAAN,GAAc,GAAEnB,KAAK,CAACmB,IAAK,EAA3B,GAA+B,MAAQ;AAClE,IAAKnB,KAAD,IAAYA,KAAK,CAACoB,SAAN,GAAkB,6BAAlB,GAAkD,EAAI;AACtE,IAAKpB,KAAD,IAAYA,KAAK,CAACI,KAAN,GAAe,UAASJ,KAAK,CAACI,KAAM,GAApC,GAAyC,EAAI;AAC7D;AACA,CALA,C,CAOA;;MAPMa,I;AAQN,MAAMI,SAAS,GAAGxB,MAAM,CAACyB,MAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,S;AAeN,eAAetB,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\nconst WordList = (props) => {\n  //   리덕스에 있는 데이터를 가져와요!\n  const word_list = useSelector((state) => state.word.word_list);\n\n  return (\n    <React.Fragment>\n      <Title style={{color: white}}>My dictionary</Title>\n      {word_list.map((w) => {\n        return (\n          <Card key={w.id}>\n            <Text color=\"#888888\" size=\"8px\" underline>\n              단어\n            </Text>\n            <Text>{w.word}</Text>\n            <Text color=\"#888888\" size=\"8px\" underline>\n              설명\n            </Text>\n            <Text>{w.desc}</Text>\n            <Text color=\"#888888\" size=\"8px\" underline>\n              예시\n            </Text>\n            <Text color=\"blue\">{w.example}</Text>\n          </Card>\n        );\n      })}\n\n      <AddButton\n        onClick={() => {\n          props.history.push(\"/write\");\n        }}\n      >\n        +\n      </AddButton>\n    </React.Fragment>\n  );\n};\n\n// 제목 스타일을 잡아줄 거예요.\nconst Title = styled.h1`\n  width: 90vw;\n  margin: 8px auto;\n`;\n\n// 목록에 나올 단어들을 각각 카드 뷰로 만들거예요.\n// Card는 카드 하나(와이어프레임의 단어, 설명, 예시를 담고 있는 흰색 네모칸 하나! 그게 카드입니다.)의 스타일을 담당해요!\nconst Card = styled.div`\n  width: 300px;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 4px 16px;\n  margin: 8px auto;\n  box-sizing: border-box;\n  background-color: #ffffff;\n  border-radius: 15px;\n`;\n\n// 텍스트 스타일을 잡아줄거예요.\n// size라는 props가 있으면 size대로 폰트 크기를 넣어주고,\n// underline이라는 props가 있으면 밑줄을 줄거예요.(text-decoration 속성을 사용합니다.)\n// color라는 props가 있으면 color대로 텍스트 컬러를 바꿔줄거예요.\nconst Text = styled.p`\n  font-size: ${(props) => (props.size ? `${props.size}` : \"16px\")};\n  ${(props) => (props.underline ? \"text-decoration: underline;\" : \"\")}\n  ${(props) => (props.color ? `color: ${props.color};` : \"\")}\n  margin: 4px 0px;\n`;\n\n// 추가하기 버튼 스타일을 잡아줄거예요.\nconst AddButton = styled.button`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 50px;\n  height: 50px;\n  border-radius: 50px;\n  background-color: #6100ff;\n  color: #ffffff;\n  font-size: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default WordList;\n"]},"metadata":{},"sourceType":"module"}