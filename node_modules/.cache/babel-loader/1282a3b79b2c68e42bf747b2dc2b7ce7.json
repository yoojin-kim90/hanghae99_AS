{"ast":null,"code":"// word.js\n\n/**\n * 액션 타입을 정해주고, \n * 액션 생성자를 만들고,\n * 리듀서를 만들어줘요!\n * \n * 그리고 나면, configureStore.js에서 rootReducer로 묶어주고 -> 미들웨어랑 엮어서 -> 스토어를 만들어줍니다.\n */\n// Actions\nconst LOAD = \"word/LOAD\";\nconst CREATE = \"word/CREATE\"; // wordList에 있던 가짜 데이터를 initialState로 옮겨옵니다.\n\nconst initialState = {\n  word_list: [{\n    id: \"list_0\",\n    word: \"ㅎ1ㅎ1\",\n    desc: \"히히를 변형한 단어. 숫자 1을 'ㅣ'로 쓴다.\",\n    example: \"저 친구가 초콜릿을 줬어. ㅎ1ㅎ1\"\n  }, {\n    id: \"list_1\",\n    word: \"ㅎ1ㅎ1\",\n    desc: \"히히를 변형한 단어. 숫자 1을 'ㅣ'로 쓴다.\",\n    example: \"저 친구가 초콜릿을 줬어. ㅎ1ㅎ1\"\n  }, {\n    id: \"list_2\",\n    word: \"ㅎ1ㅎ1\",\n    desc: \"히히를 변형한 단어. 숫자 1을 'ㅣ'로 쓴다.\",\n    example: \"저 친구가 초콜릿을 줬어. ㅎ1ㅎ1\"\n  }, {\n    id: \"list_3\",\n    word: \"ㅎ1ㅎ1\",\n    desc: \"히히를 변형한 단어. 숫자 1을 'ㅣ'로 쓴다.\",\n    example: \"저 친구가 초콜릿을 줬어. ㅎ1ㅎ1\"\n  }]\n}; // Action Creators\n\nexport const loadWord = word_list => {\n  return {\n    type: LOAD,\n    word_list\n  };\n};\nexport const createWord = word => {\n  return {\n    type: CREATE,\n    word\n  };\n}; // Reducer\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"word/LOAD\":\n      return state;\n\n    case \"word/CREATE\":\n      // 받아온 데이터를 추가한 새 리스트 만들기\n      const new_word_list = [...state.word_list, action.word]; //   state를 갈아끼워요\n\n      return { ...state,\n        word_list: new_word_list\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/gim-yujin/Desktop/sparta/sparta_react/react-as/src/redux/modules/word.js"],"names":["LOAD","CREATE","initialState","word_list","id","word","desc","example","loadWord","type","createWord","reducer","state","action","new_word_list"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAMA,IAAI,GAAG,WAAb;AACA,MAAMC,MAAM,GAAG,aAAf,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,QADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,EAAE,4BAHR;AAIEC,IAAAA,OAAO,EAAE;AAJX,GADS,EAOT;AACEH,IAAAA,EAAE,EAAE,QADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,EAAE,4BAHR;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAPS,EAaT;AACEH,IAAAA,EAAE,EAAE,QADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,EAAE,4BAHR;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAbS,EAmBT;AACEH,IAAAA,EAAE,EAAE,QADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,EAAE,4BAHR;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAnBS;AADQ,CAArB,C,CA4BA;;AACA,OAAO,MAAMC,QAAQ,GAAIL,SAAD,IAAe;AACrC,SAAO;AAAEM,IAAAA,IAAI,EAAET,IAAR;AAAcG,IAAAA;AAAd,GAAP;AACD,CAFM;AAIP,OAAO,MAAMO,UAAU,GAAIL,IAAD,IAAU;AAClC,SAAO;AAAEI,IAAAA,IAAI,EAAER,MAAR;AAAgBI,IAAAA;AAAhB,GAAP;AACD,CAFM,C,CAIP;;AACA,eAAe,SAASM,OAAT,CAAiBC,KAAK,GAAGV,YAAzB,EAAuCW,MAAM,GAAG,EAAhD,EAAoD;AACjE,UAAQA,MAAM,CAACJ,IAAf;AACE;AACA,SAAK,WAAL;AACE,aAAOG,KAAP;;AAEF,SAAK,aAAL;AACI;AACF,YAAME,aAAa,GAAG,CAAC,GAAGF,KAAK,CAACT,SAAV,EAAqBU,MAAM,CAACR,IAA5B,CAAtB,CAFF,CAIA;;AACE,aAAO,EAAC,GAAGO,KAAJ;AAAWT,QAAAA,SAAS,EAAEW;AAAtB,OAAP;;AAEF;AACE,aAAOF,KAAP;AAbJ;AAeD","sourcesContent":["// word.js\n/**\n * 액션 타입을 정해주고, \n * 액션 생성자를 만들고,\n * 리듀서를 만들어줘요!\n * \n * 그리고 나면, configureStore.js에서 rootReducer로 묶어주고 -> 미들웨어랑 엮어서 -> 스토어를 만들어줍니다.\n */\n\n// Actions\nconst LOAD = \"word/LOAD\";\nconst CREATE = \"word/CREATE\";\n\n// wordList에 있던 가짜 데이터를 initialState로 옮겨옵니다.\nconst initialState = {\n  word_list: [\n    {\n      id: \"list_0\",\n      word: \"ㅎ1ㅎ1\",\n      desc: \"히히를 변형한 단어. 숫자 1을 'ㅣ'로 쓴다.\",\n      example: \"저 친구가 초콜릿을 줬어. ㅎ1ㅎ1\",\n    },\n    {\n      id: \"list_1\",\n      word: \"ㅎ1ㅎ1\",\n      desc: \"히히를 변형한 단어. 숫자 1을 'ㅣ'로 쓴다.\",\n      example: \"저 친구가 초콜릿을 줬어. ㅎ1ㅎ1\",\n    },\n    {\n      id: \"list_2\",\n      word: \"ㅎ1ㅎ1\",\n      desc: \"히히를 변형한 단어. 숫자 1을 'ㅣ'로 쓴다.\",\n      example: \"저 친구가 초콜릿을 줬어. ㅎ1ㅎ1\",\n    },\n    {\n      id: \"list_3\",\n      word: \"ㅎ1ㅎ1\",\n      desc: \"히히를 변형한 단어. 숫자 1을 'ㅣ'로 쓴다.\",\n      example: \"저 친구가 초콜릿을 줬어. ㅎ1ㅎ1\",\n    },\n  ],\n};\n// Action Creators\nexport const loadWord = (word_list) => {\n  return { type: LOAD, word_list };\n};\n\nexport const createWord = (word) => {\n  return { type: CREATE, word };\n};\n\n// Reducer\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"word/LOAD\":\n      return state;\n\n    case \"word/CREATE\":\n        // 받아온 데이터를 추가한 새 리스트 만들기\n      const new_word_list = [...state.word_list, action.word];\n\n    //   state를 갈아끼워요\n      return {...state, word_list: new_word_list };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}